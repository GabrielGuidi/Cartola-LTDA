// <auto-generated />
using System;
using Cartola.Infra;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Cartola.Infra.Migrations
{
    [DbContext(typeof(CartolaDBContext))]
    [Migration("20200809030147_updateTablePartida")]
    partial class updateTablePartida
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Cartola.Domain.Entities.Clube", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Abreviacao")
                        .HasColumnType("nvarchar(16)")
                        .HasMaxLength(16);

                    b.Property<int>("ClubeId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DataModificacao")
                        .HasColumnType("datetime2");

                    b.Property<string>("Nome")
                        .HasColumnType("nvarchar(64)")
                        .HasMaxLength(64);

                    b.Property<string>("NomeFantasia")
                        .HasColumnType("nvarchar(64)")
                        .HasMaxLength(64);

                    b.Property<int?>("Posicao")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ClubeId")
                        .IsUnique();

                    b.ToTable("Clube");
                });

            modelBuilder.Entity("Cartola.Domain.Entities.Escudos", b =>
                {
                    b.Property<int>("EscudosId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ClubeId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DataModificacao")
                        .HasColumnType("datetime2");

                    b.Property<string>("Grande")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<string>("Medio")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<string>("Pequeno")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.HasKey("EscudosId");

                    b.HasIndex("ClubeId")
                        .IsUnique();

                    b.ToTable("Escudos");
                });

            modelBuilder.Entity("Cartola.Domain.Entities.Esquema", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DataModificacao")
                        .HasColumnType("datetime2");

                    b.Property<int>("EsquemaId")
                        .HasColumnType("int");

                    b.Property<string>("Nome")
                        .HasColumnType("nvarchar(16)")
                        .HasMaxLength(16);

                    b.HasKey("Id");

                    b.HasIndex("EsquemaId")
                        .IsUnique();

                    b.ToTable("Esquema");
                });

            modelBuilder.Entity("Cartola.Domain.Entities.EsquemaPosicoes", b =>
                {
                    b.Property<int>("PosicoesEscalacaoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Atacantes")
                        .HasColumnType("int");

                    b.Property<DateTime>("DataModificacao")
                        .HasColumnType("datetime2");

                    b.Property<int>("EsquemaId")
                        .HasColumnType("int");

                    b.Property<int>("Goleiro")
                        .HasColumnType("int");

                    b.Property<int>("Laterais")
                        .HasColumnType("int");

                    b.Property<int>("Meias")
                        .HasColumnType("int");

                    b.Property<int>("Tecnico")
                        .HasColumnType("int");

                    b.Property<int>("Zagueiros")
                        .HasColumnType("int");

                    b.HasKey("PosicoesEscalacaoId");

                    b.HasIndex("EsquemaId")
                        .IsUnique();

                    b.ToTable("EsquemaPosicoes");
                });

            modelBuilder.Entity("Cartola.Domain.Entities.Partida", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AproveitamentoMandante")
                        .HasColumnType("nvarchar(16)")
                        .HasMaxLength(16);

                    b.Property<string>("AproveitamentoVisitante")
                        .HasColumnType("nvarchar(16)")
                        .HasMaxLength(16);

                    b.Property<int>("ClubeCasaId")
                        .HasColumnType("int");

                    b.Property<int>("ClubeCasaPosicao")
                        .HasColumnType("int");

                    b.Property<int>("ClubeVisitanteId")
                        .HasColumnType("int");

                    b.Property<int>("ClubeVisitantePosicao")
                        .HasColumnType("int");

                    b.Property<DateTime>("DataModificacao")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DataPartida")
                        .HasColumnType("datetime2");

                    b.Property<string>("LocalPartida")
                        .HasColumnType("nvarchar(64)")
                        .HasMaxLength(64);

                    b.Property<int>("PartidaId")
                        .HasColumnType("int");

                    b.Property<bool>("PartidaValida")
                        .HasColumnType("bit");

                    b.Property<int?>("PlacarOficialMandante")
                        .HasColumnType("int");

                    b.Property<int?>("PlacarOficialVisitante")
                        .HasColumnType("int");

                    b.Property<int>("Rodada")
                        .HasColumnType("int");

                    b.Property<string>("UrlConfronto")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<string>("UrlTransmissao")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.HasKey("Id");

                    b.HasIndex("ClubeCasaId");

                    b.HasIndex("ClubeVisitanteId");

                    b.HasIndex("PartidaId")
                        .IsUnique();

                    b.ToTable("Partida");
                });

            modelBuilder.Entity("Cartola.Domain.Entities.Posicao", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Abreviacao")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DataModificacao")
                        .HasColumnType("datetime2");

                    b.Property<string>("Nome")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PosicaoId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PosicaoId")
                        .IsUnique();

                    b.ToTable("Posicao");
                });

            modelBuilder.Entity("Cartola.Domain.Entities.Rodada", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DataFim")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DataInicio")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DataModificacao")
                        .HasColumnType("datetime2");

                    b.Property<int>("RodadaId")
                        .HasColumnType("int")
                        .HasMaxLength(256);

                    b.HasKey("Id");

                    b.HasIndex("RodadaId")
                        .IsUnique();

                    b.ToTable("Rodada");
                });

            modelBuilder.Entity("Cartola.Domain.Entities.Status", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DataModificacao")
                        .HasColumnType("datetime2");

                    b.Property<string>("Nome")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("StatusId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("StatusId")
                        .IsUnique();

                    b.ToTable("Status");
                });

            modelBuilder.Entity("Cartola.Domain.Entities.Transmissao", b =>
                {
                    b.Property<int>("TransmissaoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DataModificacao")
                        .HasColumnType("datetime2");

                    b.Property<string>("Label")
                        .HasColumnType("nvarchar(128)")
                        .HasMaxLength(128);

                    b.Property<int>("PartidaId")
                        .HasColumnType("int");

                    b.Property<string>("Url")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.HasKey("TransmissaoId");

                    b.HasIndex("PartidaId")
                        .IsUnique();

                    b.ToTable("Transmissao");
                });

            modelBuilder.Entity("Cartola.Domain.Entities.Escudos", b =>
                {
                    b.HasOne("Cartola.Domain.Entities.Clube", "Clube")
                        .WithOne("Escudos")
                        .HasForeignKey("Cartola.Domain.Entities.Escudos", "ClubeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Cartola.Domain.Entities.EsquemaPosicoes", b =>
                {
                    b.HasOne("Cartola.Domain.Entities.Esquema", "Esquema")
                        .WithOne("Posicoes")
                        .HasForeignKey("Cartola.Domain.Entities.EsquemaPosicoes", "EsquemaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Cartola.Domain.Entities.Partida", b =>
                {
                    b.HasOne("Cartola.Domain.Entities.Clube", "ClubeCasa")
                        .WithMany("PartidasMandante")
                        .HasForeignKey("ClubeCasaId")
                        .HasPrincipalKey("ClubeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Cartola.Domain.Entities.Clube", "ClubeVisitante")
                        .WithMany("PartidasVisitante")
                        .HasForeignKey("ClubeVisitanteId")
                        .HasPrincipalKey("ClubeId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();
                });

            modelBuilder.Entity("Cartola.Domain.Entities.Transmissao", b =>
                {
                    b.HasOne("Cartola.Domain.Entities.Partida", "Partida")
                        .WithOne("Transmissao")
                        .HasForeignKey("Cartola.Domain.Entities.Transmissao", "PartidaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
